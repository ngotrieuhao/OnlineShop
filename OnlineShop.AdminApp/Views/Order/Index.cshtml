@using OnlineShop.ViewModels.Common;
@using OnlineShop.ViewModels.Utilities.Enums;
@model PagedResult<OnlineShop.ViewModels.Sales.OrderViewModel>
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{
    ViewData["Title"] = "Order List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);
    </script>
    <script src="~/js/order.js"></script>
    <script>
        var orderController = new OrderController();
        orderController.initialize();
    </script>
}

<div class="container-fluid">
    <h1 class="mt-4">Order List</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a style="color: #0779e4;" href="/">Homepage</a></li>
        <li class="breadcrumb-item active">Order List</li>
    </ol>
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-7 col-xs-12">
                </div>
                <div class="col-md-5 col-xs-12">
                    <form asp-action="Index" asp-controller="Order" method="get">
                        <div class="row">
                            <div class="col-md-9">
                                @*name: là tên tham số*@
                                <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-info"><i class="fa fa-search" aria-hidden="true"></i></button>
                                <button type="button" onclick="window.location.href='/Order/Index'" class="btn btn-secondary">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="text-center">
                                ID
                            </th>
                            <th class="text-center">
                                Customer
                            </th>
                            <th class="text-center">
                                Booking date
                            </th>
                            <th class="text-center">
                                Status
                            </th>
                            <th class="text-center">
                                Order value
                            </th>
                            <th class="text-center">
                                Order processing
                            </th>
                            <th class="text-center">
                                Operation
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.OrderDate)
                                </td>
                                <td class="text-center">
                                    @{
                                        var status = "";
                                        var statusEnum = (int)item.Status;
                                        switch (statusEnum)
                                        {
                                            case 1:
                                                status = "Waiting for approval";
                                                break;
                                            case 2:
                                                status = "Approved";
                                                break;
                                            case 3:
                                                status = "Delivering";
                                                break;
                                            case 4:
                                                status = "Delivered";
                                                break;
                                            case 5:
                                                status = "Canceled";
                                                break;
                                            default:
                                                status = "...";
                                                break;
                                        }
                                    }
                                    @status
                                </td>
                                <td class="text-center">
                                    <span>&#36;</span>@item.Price.ToString("N0")                                  
                                </td>
                                <td class="text-center">

                                    @if (item.Status == (OrderStatus)1)
                                    {
                                        <button class="btn btn-success btn-update-status" data-id="@item.Id">@Html.ActionLink("Approve order", "UpdateOrderStatus", new { orderId = item.Id, }, new { style = "color:white;" })</button>
                                        <button class="btn btn-danger btn-cancel" data-id="@item.Id">Cancel</button>
                                    }
                                    else if (item.Status == (OrderStatus)2)
                                    {
                                        <button class="btn btn-success btn-update-status" data-id="@item.Id">@Html.ActionLink("Delivery", "UpdateOrderStatus", new { orderId = item.Id, style = "color:white;" }, new { style = "color:white;" })</button>
                                        <button class="btn btn-danger btn-cancel" data-id="@item.Id">Cancel</button>
                                    }
                                    else if (item.Status == (OrderStatus)3)
                                    {
                                        <button class="btn btn btn-success btn-update-status" data-id="@item.Id">@Html.ActionLink("Delivery confirmation", "UpdateOrderStatus", new { orderId = item.Id, style = "color:white;" }, new { style = "color:white;" })</button>
                                    }
                                </td>
                                <td class="text-center">
                                    <button class="btn btn-primary" style="background: white;">@Html.ActionLink("View Detail", "Detail", new { orderId = item.Id, name = item.Name })</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @*truyền Model vào hàm InvokeAsync của class PagerViewComponent để phân trang *@
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>

